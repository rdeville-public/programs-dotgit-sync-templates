# BEGIN DOTGIT-SYNC BLOCK MANAGED
---
"Check dotgit-sync Update":
  image: alpine:latest
  stage: pre-ci
  needs:
    - "Lint All Commit Since Default Branch"
  variables:
    DOTGIT_BRANCH: chore/dotgit-sync-template-update
    GIT_USER_NAME: "Dotgit Sync [bot]"
    GIT_USER_EMAIL: "code+bot.dotgit-sync@romaindeville.fr"
    COMMIT_MESSAGE: "⬆️ Update templated files from dotgit-sync"
    GITLAB_HOST: "${CI_SERVER_HOST}"
  before_script:
    - apk add --update --no-cache
        git
        python3
        py3-pip
        glab
    - git config --global user.email "${GIT_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME}"
    - python3 -m venv .env
    - source .env/bin/activate
    - pip3 install
        git+https://framagit.org/rdeville-public/programs/dotgit-sync
  script:
      # Avoid being in detached state and ensure main is pulled
    - git fetch --all
    - git checkout "${CI_DEFAULT_BRANCH}"
    - git pull origin "${CI_DEFAULT_BRANCH}"
    - |-
      # Check if dotgit-sync branch already exists, if so, make it up-to-date
      # with main branch
      if git branch --list | grep "${DOTGIT_BRANCH}"
      then
        git checkout "${DOTGIT_BRANCH}"
        git pull origin "${DOTGIT_BRANCH}"
        git rebase "${CI_DEFAULT_BRANCH}"
      else
        git checkout "${CI_DEFAULT_BRANCH}"
        git checkout -b "${DOTGIT_BRANCH}"
      fi
    - dotgit-sync
    - |-
      if git diff --quiet
      then
        export DOTGIT_UPGRADE=true
      fi
    - |-
      if [[ -n "${DOTGIT_UPGRADE}" ]]
      then
        git add .
        git commit -m "${COMMIT_MESSAGE}"
      fi
    - git remote set-url origin "https://gitlab-ci-token:${DOTGIT_SYNC_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}"
    - |-
      if [[ -n "${DOTGIT_UPGRADE}" ]] && ! glab mr list | grep -q "${COMMIT_MESSAGE}"
      then
        # In any case, make sure remote branch is up-to-date
        # WARNING: DANGEROUS, BE SURE TO PROTECT DEFAULT BRANCHES
        git push \
          --force \
          -o merge_request.create \
          -o merge_request.label=ci \
          -o merge_request.label=enhancement \
          -o merge_request.title="${COMMIT_MESSAGE}" \
          --set-upstream origin \
          "${DOTGIT_BRANCH}"
      else
        # In any case, make sure remote branch is up-to-date
        # WARNING: DANGEROUS, BE SURE TO PROTECT DEFAULT BRANCHES
        git push \
          --force \
          --set-upstream origin \
          "${DOTGIT_BRANCH}"
      fi
  rules:
      # Force pipelines on schedule event on main
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      # Do not run otherwise
    - when: never
# END DOTGIT-SYNC BLOCK MANAGED
